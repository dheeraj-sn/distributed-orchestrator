services:
  scheduler:
    build:
      context: .
      dockerfile: Dockerfile.scheduler
    container_name: orchestrator_scheduler
    ports:
      - "50051:50051"
      - "9090:9090"  # Metrics port
    environment:
      SCHEDULER_HOST: 0.0.0.0:50051
      SCHEDULER_METRICS_PORT: 9090
      LOG_LEVEL: debug
      LOG_FORMAT: json
      #STORAGE_BACKEND: memory
      STORAGE_BACKEND: postgres
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: yourpassword
      POSTGRES_DB: orchestrator

  worker:
    build:
      context: .
      dockerfile: Dockerfile.worker
    container_name: orchestrator_worker
    depends_on:
      - scheduler
    ports:
      - "9091:9091"  # Metrics port
    environment:
      WORKER_HOST: 0.0.0.0:50052
      WORKER_METRICS_PORT: 9091
      WORKER_CONCURRENCY: 4
      WORKER_ID: worker-docker-1
      CLIENT_SCHEDULER_ADDR: scheduler:50051
      RETRY_MAX_ATTEMPTS: 3
      RETRY_INITIAL_BACKOFF: 1s
      RETRY_MAX_BACKOFF: 1m
      LOG_LEVEL: debug
      LOG_FORMAT: json
      #STORAGE_BACKEND: memory
      STORAGE_BACKEND: postgres
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: yourpassword
      POSTGRES_DB: orchestrator

  client:
    build:
      context: .
      dockerfile: Dockerfile.client
    container_name: orchestrator_client
    depends_on:
      - scheduler
    environment:
      CLIENT_SCHEDULER_ADDR: scheduler:50051
      LOG_LEVEL: debug
      LOG_FORMAT: json

  postgres:
    image: postgres:15
    container_name: orchestrator_postgres
    environment:
      POSTGRES_DB: orchestrator
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: yourpassword
    ports:
      - "5432:5432"

  migrate:
    image: migrate/migrate
    container_name: orchestrator_migrate
    depends_on:
      - postgres
    volumes:
      - ./migrations:/migrations:ro
    entrypoint: >
      sh -c "
        until migrate -path=/migrations -database=postgres://postgres:yourpassword@postgres:5432/orchestrator?sslmode=disable up 2>/dev/null; do
          echo '‚è≥ Waiting for Postgres to be ready...';
          sleep 2;
        done
      "
    restart: "no"